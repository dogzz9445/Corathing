<UserControl x:Class="Corathing.Widgets.Basics.Widgets.Timers.TimerWidget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Corathing.Widgets.Basics.Widgets.Timers"
             xmlns:circulars="clr-namespace:Corathing.UI.WPF.Controls.CircularProgressBars;assembly=Corathing.UI.WPF"
             xmlns:converters="clr-namespace:Corathing.UI.WPF.Converters;assembly=Corathing.UI.WPF"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             x:Name="TimerWidgetMainControl"
             mc:Ignorable="d"
             d:DesignHeight="128" d:DesignWidth="128">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Corathing.UI.WPF;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:TimeSpanSecondToDoubleConverter x:Key="TimeSpanSecondToDoubleConverter" />
            <converters:BoolNotNullToVisibilityConverter x:Key="BoolNotNullToVisibilityConverter" />
            <converters:InvertBoolNullToVisibilityConverter x:Key="InvertBoolNullToVisibilityConverter" />

            <Style TargetType="{x:Type local:TimerWidget}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.EditMode, RelativeSource={RelativeSource Self}}"
                                       Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource ControlBackgroundHover}" />
                        <Setter Property="Cursor"
                                Value="Hand" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <b:Interaction.Triggers>
            <b:EventTrigger EventName="MouseLeftButtonDown"
                                    SourceObject="{Binding ElementName=TimerWidgetMainControl}">
                <b:InvokeCommandAction Command="{Binding ToggleTimerCommand}" />
            </b:EventTrigger>
        </b:Interaction.Triggers>
        <circulars:CircularProgressBar Padding="4"
                                       Style="{StaticResource AutoCircularProgressBar}"
                                       Maximum="{Binding ConfiguringTime, Converter={StaticResource TimeSpanSecondToDoubleConverter}}"
                                       Value="{Binding RamainingTime, Converter={StaticResource TimeSpanSecondToDoubleConverter}}"
                                       />
        <StackPanel VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Orientation="Vertical">
            <Button Content="Start"
                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                    Visibility="{Binding IsRunning, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                    Command="{Binding StartCommand}" />
            <Button Content="Stop"
                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                    Visibility="{Binding IsRunning, Converter={StaticResource BoolNotNullToVisibilityConverter}}"
                    Command="{Binding StopCommand}" />
            <Button Content="Reset"
                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                    Visibility="{Binding IsRunning, Converter={StaticResource BoolNotNullToVisibilityConverter}}"
                    Command="{Binding ResetCommand}" />
        </StackPanel>
    </Grid>
</UserControl>
