<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <!-- 컬러 참조는 Styles/Dark.xaml 혹은 Styles/Light.xaml -->
    
    <!-- ================================================================ -->
    <!-- Button Styles                                                    -->
    <!-- 1. ButtonNoStyle                                                 -->
    <!-- 2. ButtonNoStyleWithEvent                                        -->
    <!--   - Button No Style with MouseOver and Press Style               -->
    <!-- 3. Alert Light Brushes                                           -->
    <!-- 4. Alert Dark Brushes                                            -->
    <!-- 5. IconButton24                                                  -->
    <!-- 6. CoraWidgetEditModeButtonWithEvent                             -->
    <!--   - Button with MouseOver and Press Style                        -->
    <!-- ================================================================ -->

    <!-- 1. Button No Style -->
    <Style x:Key="ButtonNoStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 2. Button No Style with Event -->
    <Style x:Key="ButtonNoStyleWithEvent"
           BasedOn="{StaticResource ButtonNoStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ControlBackgroundHover}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ControlBackgroundPressed}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 5. IconButton -->
    <!-- Usage:
        <ui:Button Style="{StaticResource IconButton24}"
                   Icon="{ui:SymbolIcon Guest24}" />
    -->
    <Style TargetType="{x:Type ui:Button}"
           x:Key="IconButton24">
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="FontSize"
                Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:Button}">
                    <ui:Button Grid.Column="1"
                               Padding="0"
                               FocusVisualStyle="{x:Null}"
                               Icon="{TemplateBinding Icon}"
                               Command="{TemplateBinding Command}"
                               CommandParameter="{TemplateBinding CommandParameter}"
                               ToolTip="{TemplateBinding ToolTip}"
                               FontSize="{TemplateBinding FontSize}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 6. CoraWidgetEditModeButtonWithEvent -->
    <Style x:Key="CoraWidgetEditModeButtonWithEvent"
           BasedOn="{StaticResource ButtonNoStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="White" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="Black" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding DataContext.EditMode, RelativeSource={RelativeSource Self}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource ControlBackgroundPressed}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>